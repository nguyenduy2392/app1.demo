{"version":3,"sources":["mfupload.js"],"names":[],"mappingsfile":"main.js","sourcesContent":["/*\r\n * JQuery MFupload v1.10\r\n *\r\n * Copyright 2011, Gianrocco Giaquinta\r\n * http://www.jscripts.info/\r\n *\r\n * Dual licensed under the MIT or GPL Version 2 licenses.\r\n * http://jquery.org/license\r\n *\r\n */\r\n\r\nfunction loadUpload() {\r\n    var base = {\r\n        url: $(document.body).data('base'),\r\n        token: $('meta[name=\"csrf-token\"]').attr('content'),\r\n        mfUpload: '[mf-upload=\"upload-picture\"]'\r\n    }\r\n    $('.mf_upload_m').remove();\r\n    var target = $(base.mfUpload);\r\n\r\n    if (target.length) {\r\n        target.each(function () {\r\n            $(this).mfupload({\r\n                type: 'jpg,png,tif,jpeg,mp4,wmv,avi,3gp,pdf',\r\n                maxsize: 10000,\r\n                post_upload: base.url + \"/upload\",\r\n                folder: \"\",\r\n                ini_text: '',\r\n                over_text: \"\",\r\n                over_col: 'white',\r\n                over_bkcol: '',\r\n                init: function (item) {\r\n\r\n                },\r\n                start: function (result, item) {\r\n                },\r\n                beforeSend: function (data) {\r\n                    data.append(\"_token\", base.token);\r\n                },\r\n                loaded: function (result, item) {\r\n                    var type = $(item).attr('data-type');\r\n                    var index = $(item).closest('.parent-item').attr('data-index');console.log(index);\r\n                    if (result.status == true) {\r\n\r\n                        var src = result.src;\r\n\r\n                        var bgr = $(item).closest('.parent-item[data-index=\"' + index + '\"]');\r\n\r\n                        if (bgr !== null) {\r\n                            bgr.find('.img-background').css('background-image', 'url(' + src + ')');\r\n                            bgr.find('.picture-upload').val(result.imgName);\r\n                            $(item).attr('data-type', 'old');\r\n                        }\r\n                        if(type == \"create-new\") {\r\n                            makeNewUpload(index);\r\n                        }\r\n\r\n\r\n                    }\r\n                },\r\n                progress: function () {\r\n                },\r\n                error: function (error, item) {\r\n                },\r\n                completed: function (item) {\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\n/*\r\n * JQuery MFupload v1.10\r\n *\r\n * Copyright 2011, Gianrocco Giaquinta\r\n * http://www.jscripts.info/\r\n *\r\n * Dual licensed under the MIT or GPL Version 2 licenses.\r\n * http://jquery.org/license\r\n *\r\n */\r\n\r\n(function ($) {\r\n\r\n    var settings;\r\n\r\n    var methods = {\r\n        completed: function () {\r\n        },\r\n        start: function () {\r\n        },\r\n        beforeSend: function () {\r\n        },\r\n        loaded: function () {\r\n        },\r\n        progress: function () {\r\n        },\r\n        error: function () {\r\n        },\r\n        upload_old: function (ctl, iframe) {\r\n\r\n            settings.init();\r\n\r\n            var fnam = ctl.attr('value').replace(/^.*[\\\\\\/]/, '')\r\n\r\n            var xload = {fileno: -1, filename: fnam, perc: 0, sent: 0, total: 0};\r\n            settings.start(xload);\r\n\r\n            $('<iframe id=\"' + iframe + '\" name=\"' + iframe + '\" src=\"#\" style=\"display:none\"></iframe>').appendTo('body');\r\n\r\n            $('#' + iframe).bind('load', function () {\r\n\r\n                var tmp = $('#' + iframe).contents().find('body').html();\r\n                var result = jQuery.parseJSON(tmp);\r\n                result.fileno = -1;\r\n                settings.loaded(result);\r\n                settings.completed();\r\n\r\n                $('#' + iframe).unbind('load');\r\n                $('#' + iframe).remove();\r\n            });\r\n\r\n            ctl.parent().submit();\r\n        },\r\n        upload: function (files) {\r\n            var _this = this;\r\n            nfiles = files.length;\r\n            cfiles = nfiles;\r\n\r\n            settings.init();\r\n\r\n            if (typeof files !== \"undefined\") {\r\n                for (var i = 0; i < nfiles; i++) {\r\n\r\n                    var ext = files[i].name.toLowerCase().split(/\\./);\r\n                    ext = ext[ext.length - 1];\r\n\r\n                    if (settings.type && settings.type.indexOf(ext) == -1) {\r\n                        var err = {err_no: 1, err_des: \"File type error\", fileno: i, filename: files[i].name};\r\n                        settings.error(err, _this);\r\n                        cfiles--;\r\n                        if (cfiles == 0)\r\n                            settings.completed();\r\n\r\n                    } else if (settings.maxsize > 0 && files[i].size > settings.maxsize * 1048576) {\r\n                        var err = {err_no: 2, err_des: \"File size error\", fileno: i, filename: files[i].name};\r\n                        settings.error(err, _this);\r\n                        cfiles--;\r\n                        if (cfiles == 0)\r\n                            settings.completed();\r\n\r\n                    } else {\r\n                        var xload = {fileno: i, filename: files[i].name, perc: 0, sent: 0, total: 0};\r\n                        settings.start(xload, _this);\r\n\r\n                        try\r\n                        {\r\n                            // Firefox, Opera 8.0+, Safari  \r\n                            var xhr = new XMLHttpRequest();\r\n                        }\r\n                        catch (e)\r\n                        {\r\n                            alert(\"Your browser does not support AJAX!\");\r\n                            return false;\r\n                        }\r\n\r\n                        xhr.open(\"POST\", settings.post_upload, true);\r\n                        xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n                        xhr.upload.filenumb = i;\r\n                        xhr.filenumb = i;\r\n                        xhr.upload.filename = files[i].name;\r\n\r\n                        xhr.upload.addEventListener(\"progress\", function (e) {\r\n\r\n                            if (e.lengthComputable) {\r\n\r\n                                var loaded = Math.ceil((e.loaded / e.total) * 100);\r\n                                var xload = {fileno: this.filenumb, filename: this.filename, perc: loaded, sent: e.loaded, total: e.total};\r\n                                settings.progress(xload);\r\n\r\n                            }\r\n                        }, false);\r\n\r\n                        xhr.addEventListener(\"load\", function (e) {\r\n                            var result = jQuery.parseJSON(e.target.responseText);\r\n                            result.fileno = this.filenumb;\r\n                            settings.loaded(result, _this);\r\n                            cfiles--;\r\n                            if (cfiles == 0)\r\n                                settings.completed(_this);\r\n\r\n                        }, false);\r\n\r\n                        var nef = new FormData();\r\n                        settings.beforeSend.call(_this, nef);\r\n                        nef.append(\"folder\", settings.folder);\r\n                        nef.append(\"file_element\", settings.file_elem);\r\n                        nef.append(\"udata\", settings.user_data);\r\n                        nef.append(settings.file_elem, files[i]);\r\n\r\n                        xhr.send(nef);\r\n                    }\r\n                }\r\n            } else {\r\n                alert(\"no support\");\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n    $.fn.mfupload = function (opt) {\r\n        var _this = this;\r\n        settings = {\r\n            'init': methods.init,\r\n            'start': methods.start,\r\n            'loaded': methods.loaded,\r\n            'progress': methods.progress,\r\n            'beforeSend': methods.beforeSend,\r\n            'completed': methods.completed,\r\n            'ini_text': 'drag files to here',\r\n            'over_text': 'drop files',\r\n            'over_col': 'white',\r\n            'over_bkcol': 'green',\r\n            'post_upload': './upload.php',\r\n            'maxsize': '5', //default 1MB\r\n            'folder': './',\r\n            'user_data': '',\r\n            'file_elem': ''\r\n        };\r\n\r\n        if (opt)\r\n            $.extend(settings, opt);\r\n\r\n        this.each(function () {\r\n            if (!((window.location != window.parent.location) ? true : false))\r\n            {\r\n\r\n                settings.file_elem = \"mf_file_\" + $(this).attr(\"id\");\r\n                settings.iframe = \"mf_iframe_\" + $(this).attr(\"id\");\r\n\r\n                $(this).append('<div class=\"mf_upload_m\"><input type=\"file\" class=\"file\" name=\"' + settings.file_elem + '\" id=\"' + settings.file_elem + '\" multiple /><input type=\"hidden\" name=\"folder\" value=\"' + settings.folder + '\" /><input type=\"hidden\" name=\"file_element\" value=\"' + settings.file_elem + '\" /><div class=\"mf_upload_ins\"></div></div>');\r\n\r\n                $(this).find(\".mf_upload_m\").css({\r\n                    'position': 'relative',\r\n                    'margin': 0,\r\n                    'padding': 0,\r\n                    'width': 'inherit',\r\n                    'height': 'inherit'\r\n                });\r\n\r\n                $(this).find(\".file\").css({\r\n                    'position': 'relative',\r\n                    'text-align': 'right',\r\n                    '-moz-opacity': '0',\r\n                    'filter': 'alpha(opacity: 0)',\r\n                    'opacity': '0',\r\n                    'z-index': '2',\r\n                    'width': '100%',\r\n                    'height': '100%',\r\n                    top: 0, left: 0\r\n                });\r\n\r\n                $(this).find(\".mf_upload_ins\").css({\r\n                    'position': 'absolute',\r\n                    'text-align': 'center',\r\n                    'z-index': '1',\r\n                    'width': '100%',\r\n                    'height': '100%',\r\n                    'top': 0,\r\n                    'left': 0,\r\n                });\r\n\r\n\r\n                $(this).find('.mf_upload_ins').empty().html(settings.ini_text);\r\n\r\n                $(this).bind({\r\n                    dragleave: function (e) {\r\n                        e.preventDefault();\r\n                        $(this).find(\".mf_upload_ins\").css('color', 'inherit');\r\n                        $(this).find(\".mf_upload_ins\").css('background-color', 'inherit').html(settings.ini_text);\r\n                    },\r\n                    drop: function (e) {\r\n                        e.preventDefault();\r\n                        $(this).find(\".mf_upload_ins\").css('color', 'inherit');\r\n                        $(this).find(\".mf_upload_ins\").css('background-color', 'inherit').html(settings.ini_text);\r\n\r\n                        var obj = e.originalEvent;\r\n                        if (obj.dataTransfer.files)\r\n                            methods.upload.call(_this, obj.dataTransfer.files);\r\n                        else\r\n                            alert(\"Drag and Drop not supported by your browser.\");\r\n\r\n                    },\r\n                    dragover: function (e) {\r\n                        e.preventDefault();\r\n                        $(this).find(\".mf_upload_ins\").css('color', settings.over_col);\r\n                        $(this).find(\".mf_upload_ins\").css('background-color', settings.over_bkcol);\r\n                        $(this).find(\".mf_upload_ins\").html(settings.over_text);\r\n\r\n                    }\r\n                });\r\n\r\n                $(this).find('input[type=file]').bind('change', function (e) {\r\n                    e.preventDefault();\r\n\r\n                    if (e.target.files)\r\n                        methods.upload.call(_this, e.target.files);\r\n                    else\r\n                        methods.upload_old($(this), settings.iframe);\r\n\r\n                });\r\n\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n})(jQuery);\r\n"],"sourceRoot":"/source/"}